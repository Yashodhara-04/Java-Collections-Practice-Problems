//-----------------------------------------------------------------PriorityQueue-----------------------------------------------------------------------------

//1. Implement a PriorityQueue and add elements to it. Then, print the elements in sorted order.

/* Online Java Compiler and Editor */
import java.util.PriorityQueue;

public class HelloWorld{

     public static void main(String []args){
      
      PriorityQueue<Integer> pq = new PriorityQueue<>();
      pq.offer(10);
      pq.offer(2);
      pq.offer(-4);
      pq.offer(190);
      pq.offer(23);
      pq.offer(56);
      pq.offer(1);
       
      while(!pq.isEmpty())
      {
          System.out.println(pq.poll());
      }
        
     }
}

//------------------------------------------------------------------------------------------------------------------------------------------------------

//2. Implement a priority queue using the PriorityQueue class.

/* Online Java Compiler and Editor */
import java.util.PriorityQueue;

public class HelloWorld{

     public static void main(String []args){
      
      PriorityQueue<Integer> pq = new PriorityQueue<>();
      pq.offer(10);
      pq.offer(2);
      pq.offer(-4);
      pq.offer(190);
      pq.offer(23);
      pq.offer(56);
      pq.offer(1);
       
      System.out.println(pq);
      
        
     }
}


//------------------------------------------------------------------------------------------------------------------------------------------------------

//3. Implement a priority queue using a custom comparator.
/* Online Java Compiler and Editor */
import java.util.PriorityQueue;
import java.util.Comparator;

public class HelloWorld{

     public static void main(String []args){
      
      PriorityQueue<Integer> pq = new PriorityQueue<>(Comparator.reverseOrder());
      pq.offer(10);
      pq.offer(2);
      pq.offer(-4);
      pq.offer(190);
      pq.offer(23);
      pq.offer(56);
      pq.offer(1);
       
     System.out.println(pq);
     }
}

//------------------------------------------------------------------------------------------------------------------------------------------------------

//4.Implement a PriorityQueue using a custom comparator.

/* Online Java Compiler and Editor */
import java.util.PriorityQueue;
import java.util.Comparator;

public class HelloWorld{

     public static void main(String []args){
      
      PriorityQueue<Employee> pq = new PriorityQueue<>(new EmployeeComparator());
      Employee e1 = new Employee(3,"Anuj",25000);
      pq.offer(e1);
      Employee e2 = new Employee(2,"Manoj",45000);
      pq.offer(e2);
      Employee e3 = new Employee(5,"Neeraj",15000);
      pq.offer(e3);
      Employee e4 = new Employee(1,"Vibhav",75000);
      pq.offer(e4);
      Employee e5 = new Employee(4,"Manu",95000);
      pq.offer(e5);
       
       while(!pq.isEmpty())
       {
            System.out.println(pq.poll());      
       }
     
     }
}

class EmployeeComparator  implements Comparator<Employee>{

    public int compare(Employee e1, Employee e2)
    {
        return e1.getEmpId() - e2.getEmpId();
    }
}
class Employee{
    private int empId;
    private String name;
    private Double salary;
    
    public Employee(int empId, String name, double salary)
    {
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }
    
    public int getEmpId()
    {
        return this.empId;
    }
    
    public void setEmpId(int empId)
    {
        this.empId = empId;
    }
    
    public String getName()
    {
        return this.name;
    }
    
    public void setName(String name)
    {
        this.name = name;
    }
    
    public Double getSalary()
    {
        return this.salary;
    }
    
    public void setSalary(Double salary)
    {
        this.salary = salary;
    }
    
    public String toString()
    {
        return "\n[ Emp Id = " + this.empId + " || Name = " + this.name + " || Salary = " + this.salary + " ]";
    }
 }

 //------------------------------------------------------------------------------------------------------------------------------------------------------

//5. Implement a Queue using the PriorityQueue class with a custom comparator.

/* Online Java Compiler and Editor */
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.Comparator;

public class HelloWorld{

     public static void main(String []args){
      
      Queue<Employee> pq = new PriorityQueue<>(new EmployeeComparator());
      Employee e1 = new Employee(3,"Anuj",25000);
      pq.offer(e1);
      Employee e2 = new Employee(2,"Manoj",45000);
      pq.offer(e2);
      Employee e3 = new Employee(5,"Neeraj",15000);
      pq.offer(e3);
      Employee e4 = new Employee(1,"Vibhav",75000);
      pq.offer(e4);
      Employee e5 = new Employee(4,"Manu",95000);
      pq.offer(e5);

       while(!pq.isEmpty())
       {
            System.out.println(pq.poll());      
       }
     
     }
}

class EmployeeComparator  implements Comparator<Employee>{

    public int compare(Employee e1, Employee e2)
    {
        return e1.getEmpId() - e2.getEmpId();
    }
}
class Employee{
    private int empId;
    private String name;
    private Double salary;
    
    public Employee(int empId, String name, double salary)
    {
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }
    
    public int getEmpId()
    {
        return this.empId;
    }
    
    public void setEmpId(int empId)
    {
        this.empId = empId;
    }
    
    public String getName()
    {
        return this.name;
    }
    
    public void setName(String name)
    {
        this.name = name;
    }
    
    public Double getSalary()
    {
        return this.salary;
    }
    
    public void setSalary(Double salary)
    {
        this.salary = salary;
    }
    
    public String toString()
    {
        return "\n[ Emp Id = " + this.empId + " || Name = " + this.name + " || Salary = " + this.salary + " ]";
    }
 }
 //------------------------------------------------------------------------------------------------------------------------------------------------------

//6. Implement a Stack using the PriorityQueue class with a custom comparator.